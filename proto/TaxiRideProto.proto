syntax = "proto3";
package protos;


message City{
    string city_name = 1;
    int32 city_id = 2;
    int32 x = 3;
    int32 y = 4;
}

message Date{
    int32 day = 1;
    int32 month = 2;
    int32 year = 3;
}

message RideRequest {
    string first_name = 1;
    string last_name = 2;
    int32 phone_number = 3;
    City start_location = 4;
    City end_location = 5;
    Date date = 6;
    int32 vacancies = 7;
    int32 pd = 8;
    int64 id = 9;
}

message UserRequest {
    City location = 1;
    string first_name = 2;
    string last_name = 3;
    Date date = 4;
    repeated City city_path = 5;
    int64 id = 6;
}

message DriveRequest{
    City source = 1;
    City dst = 2;
    Date date = 3;
    int64 user_id = 4;
    string user_city_name = 5;
}

message DriveOptions{
    repeated RideRequest rideOptions = 1;
}

message DriveResponse {
    int64 driveId = 1;
    string server_name = 2;
    int64 userId = 3;
    oneof optional_ride{
        RideRequest ride = 4;
        int32 flag = 5;
    }
}

message UserRepoRequest{
    UserRequest user = 1;
    int32 status = 2;
}

message RideRepoRequest{
    RideRequest ride = 1;
    map<string, int64> hashmap = 2;
}

message RideSnapshot{
    repeated RideRepoRequest rideSnapshot = 1;
    int64 index = 2;
}

message UserSnapshot{
    repeated UserRepoRequest userSnapshot = 1;
    int64 index = 2;
}

message EmptyMessage{}

service TaxiService {
    rpc User (UserRequest) returns (DriveOptions) {};
    rpc Ride (RideRequest) returns (RideRequest) {};
    rpc Path (DriveRequest) returns (DriveResponse) {};
    rpc CancelPath (DriveResponse) returns (DriveResponse) {};
    rpc DuplicateUser (UserRepoRequest) returns (UserRepoRequest) {};
    rpc DuplicateRide (RideRepoRequest) returns (RideRepoRequest) {};
    rpc CompleteReservation (DriveResponse) returns (DriveResponse) {};
    rpc GetRideSnapshot (EmptyMessage) returns (RideSnapshot) {};
    rpc GetUserSnapshot (EmptyMessage) returns (UserSnapshot) {};
}
